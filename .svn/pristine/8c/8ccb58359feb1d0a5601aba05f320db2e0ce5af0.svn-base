{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\loading\\loading.directive.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\loading\\loading.directive.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Input, Directive, ElementRef, Renderer2, } from '@angular/core';\nimport { DocumentWrapper, WindowWrapper } from '../shared/services/index';\nvar ElLoadingDirective = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} el\n     * @param {?} renderer\n     * @param {?} document\n     * @param {?} window\n     */\n    function ElLoadingDirective(el, renderer, document, window) {\n        this.el = el;\n        this.renderer = renderer;\n        this.document = document;\n        this.window = window;\n        this.lock = false; // ban scroll on loading active\n        this.fullScreen = false;\n        this.elLoadingTop = '50%';\n        this.visible = false;\n    }\n    Object.defineProperty(ElLoadingDirective.prototype, \"showLoading\", {\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this.visible = val;\n            if (!this.cacheElement)\n                return;\n            this.cacheElement.innerHTML = this.makeHtml();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} status\n     * @return {?}\n     */\n    ElLoadingDirective.prototype.toggleLock = function (status) {\n        if (status === void 0) {\n            status = false;\n        }\n        if (!this.lock)\n            return;\n        var /** @type {?} */ nextValue = status ? 'hidden' : this.cacheOverflow;\n        this.renderer.setStyle(this.document.body, 'overflow', nextValue);\n    };\n    /**\n     * @return {?}\n     */\n    ElLoadingDirective.prototype.makeHtml = function () {\n        this.lock && this.toggleLock(this.visible);\n        return \"\\n      <div class=\\\"el-loading-mask \" + this.customClass + \" \" + (this.fullScreen ? ' is-fullscreen' : '') + \"\\\"\\n        style=\\\"display: \" + (this.visible ? 'block' : 'none') + \"\\\">\\n        <div class=\\\"el-loading-spinner\\\" style=\\\"top: \" + this.elLoadingTop + \"\\\">\\n          <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\"/>\\n          </svg>\\n          <p class=\\\"el-loading-text\\\" style=\\\"display: \" + (this.text ? 'block' : 'none') + \"\\\">\\n            \" + this.text + \"\\n          </p>\\n        </div>\\n      </div>\\n    \";\n    };\n    /**\n     * @return {?}\n     */\n    ElLoadingDirective.prototype.ngOnInit = function () {\n        // save old overflow\n        if (this.lock) {\n            this.cacheOverflow = this.window.getComputedStyle(this.document.body).overflow;\n        }\n        this.cacheElement = this.renderer.createElement('div');\n        this.cacheElement.innerHTML = this.makeHtml();\n        var /** @type {?} */ parentElement = this.fullScreen ? this.document.body : this.el.nativeElement;\n        if (!this.fullScreen) {\n            this.renderer.setStyle(this.el.nativeElement, 'position', 'relative');\n        }\n        this.renderer.appendChild(parentElement, this.cacheElement);\n    };\n    return ElLoadingDirective;\n}());\nexport { ElLoadingDirective };\nfunction ElLoadingDirective_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElLoadingDirective.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElLoadingDirective.ctorParameters;\n    /** @type {?} */\n    ElLoadingDirective.propDecorators;\n    /** @type {?} */\n    ElLoadingDirective.prototype.text;\n    /** @type {?} */\n    ElLoadingDirective.prototype.lock;\n    /** @type {?} */\n    ElLoadingDirective.prototype.customClass;\n    /** @type {?} */\n    ElLoadingDirective.prototype.fullScreen;\n    /** @type {?} */\n    ElLoadingDirective.prototype.elLoadingTop;\n    /** @type {?} */\n    ElLoadingDirective.prototype.cacheElement;\n    /** @type {?} */\n    ElLoadingDirective.prototype.cacheOverflow;\n    /** @type {?} */\n    ElLoadingDirective.prototype.visible;\n    /** @type {?} */\n    ElLoadingDirective.prototype.el;\n    /** @type {?} */\n    ElLoadingDirective.prototype.renderer;\n    /** @type {?} */\n    ElLoadingDirective.prototype.document;\n    /** @type {?} */\n    ElLoadingDirective.prototype.window;\n}\n//# sourceMappingURL=loading.directive.js.map \n",null]}