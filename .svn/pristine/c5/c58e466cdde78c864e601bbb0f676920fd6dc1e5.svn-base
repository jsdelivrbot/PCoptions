{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\date-picker\\children\\date-table.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\date-picker\\children\\date-table.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DateFormat } from '../utils/format';\nvar ElDateTable = /*@__PURE__*/ (function () {\n    function ElDateTable() {\n        this.modelChange = new EventEmitter();\n        this.weeks = ['日', '一', '二', '三', '四', '五', '六'];\n        this.tableRows = [[], [], [], [], [], []];\n        this.targetMonthOffset = 0; // default: current month, offset = 0\n    }\n    /**\n     * @param {?} first\n     * @param {?} lastCount\n     * @return {?}\n     */\n    ElDateTable.BuildMonthStartRow = function (first, lastCount) {\n        var /** @type {?} */ lastday = 7 - first;\n        // first loop\n        lastCount++;\n        lastday++;\n        return [0, 1, 2, 3, 4, 5, 6].map(function () {\n            lastday--;\n            if (lastday > 0)\n                return { day: lastday, monthOffset: 0 };\n            lastCount--;\n            return { day: lastCount, monthOffset: -1 };\n        }).reverse();\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ElDateTable.prototype.isToday = function (item) {\n        if (this.currentMonthOffset === null)\n            return false;\n        return item.monthOffset === this.currentMonthOffset && this.today === item.day;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ElDateTable.prototype.isTargetDay = function (item) {\n        return item.monthOffset === this.targetMonthOffset && item.day === this.targetDay;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ElDateTable.prototype.clickHandle = function (item) {\n        var /** @type {?} */ date = this.date;\n        var /** @type {?} */ currentMonth = date.getMonth() + 1;\n        var /** @type {?} */ targetMonth = currentMonth + item.monthOffset;\n        // update target and update view\n        this.targetDay = item.day;\n        this.targetMonthOffset = item.monthOffset;\n        // get time and emit a number\n        date.setMonth(targetMonth - 1);\n        date.setDate(item.day);\n        this.modelChange.emit(date.getTime());\n    };\n    /**\n     * @return {?}\n     */\n    ElDateTable.prototype.getRows = function () {\n        var /** @type {?} */ date = this.date;\n        this.targetDay = date.getDate();\n        this.today = new Date().getDate();\n        this.currentMonthOffset = DateFormat.getCurrentMonthOffset(date);\n        var /** @type {?} */ lastMonth = date.getMonth() - 1;\n        var /** @type {?} */ lastYear = lastMonth < 0 ? date.getFullYear() - 1 : date.getFullYear();\n        var /** @type {?} */ currentMonthdayCount = DateFormat.getDayCountOfMonth(date.getFullYear(), date.getMonth());\n        var /** @type {?} */ lastMonthDayCount = DateFormat.getDayCountOfMonth(lastYear, lastMonth < 0 ? 12 : lastMonth);\n        var /** @type {?} */ firstDay = DateFormat.getFirstDayOfMonth(date);\n        var /** @type {?} */ nextMonthDay = 0;\n        this.tableRows = this.tableRows.map(function (row, index) {\n            if (index === 0) {\n                return ElDateTable.BuildMonthStartRow(firstDay, lastMonthDayCount);\n            }\n            var /** @type {?} */ thisWeekFirstDay = 7 - firstDay + 7 * (index - 1);\n            return new Array(7).fill(0).map(function (v, i) {\n                var /** @type {?} */ start = thisWeekFirstDay + i + 1;\n                if (start <= currentMonthdayCount)\n                    return { day: start, monthOffset: 0 };\n                nextMonthDay++;\n                return { day: nextMonthDay, monthOffset: 1 };\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ElDateTable.prototype.ngOnInit = function () {\n        this.date = new Date(this.model);\n        this.getRows();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ElDateTable.prototype.ngOnChanges = function (changes) {\n        // not include model\n        if (!changes || !changes.model)\n            return;\n        // first change\n        if (changes.model.isFirstChange())\n            return;\n        this.model = changes.model.currentValue;\n        this.date = new Date(this.model);\n        this.getRows();\n    };\n    return ElDateTable;\n}());\nexport { ElDateTable };\nfunction ElDateTable_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElDateTable.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElDateTable.ctorParameters;\n    /** @type {?} */\n    ElDateTable.propDecorators;\n    /** @type {?} */\n    ElDateTable.prototype.model;\n    /** @type {?} */\n    ElDateTable.prototype.disabledDate;\n    /** @type {?} */\n    ElDateTable.prototype.modelChange;\n    /** @type {?} */\n    ElDateTable.prototype.weeks;\n    /** @type {?} */\n    ElDateTable.prototype.tableRows;\n    /** @type {?} */\n    ElDateTable.prototype.targetDay;\n    /** @type {?} */\n    ElDateTable.prototype.targetMonthOffset;\n    /** @type {?} */\n    ElDateTable.prototype.date;\n    /** @type {?} */\n    ElDateTable.prototype.today;\n    /** @type {?} */\n    ElDateTable.prototype.currentMonthOffset;\n}\n//# sourceMappingURL=date-table.js.map \n",null]}