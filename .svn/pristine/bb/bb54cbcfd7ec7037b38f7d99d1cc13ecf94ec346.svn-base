{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\upload\\upload.request.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\upload\\upload.request.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nvar ElUploadRequest = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} http\n     */\n    function ElUploadRequest(http) {\n        this.http = http;\n    }\n    /**\n     * @param {?} path\n     * @param {?} file\n     * @return {?}\n     */\n    ElUploadRequest.prototype.upload = function (path, file) {\n        var /** @type {?} */ req = new HttpRequest('POST', path, file, {\n            headers: this.headers,\n            reportProgress: true,\n            withCredentials: this.withCredentials,\n        });\n        return this.http.request(req);\n    };\n    /**\n     * @param {?=} headers\n     * @return {?}\n     */\n    ElUploadRequest.prototype.setHeader = function (headers) {\n        if (headers === void 0) {\n            headers = {};\n        }\n        this.headers = new HttpHeaders(headers);\n        return this;\n    };\n    /**\n     * @param {?} withCredentials\n     * @return {?}\n     */\n    ElUploadRequest.prototype.setCredentials = function (withCredentials) {\n        this.withCredentials = withCredentials;\n        return this;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ElUploadRequest.prototype.setFileName = function (name) {\n        this.fileName = name;\n        return this;\n    };\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    ElUploadRequest.prototype.addExtraData = function (data) {\n        if (data === void 0) {\n            data = {};\n        }\n        this.defaultBody = data;\n        return this;\n    };\n    return ElUploadRequest;\n}());\nexport { ElUploadRequest };\nfunction ElUploadRequest_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElUploadRequest.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElUploadRequest.ctorParameters;\n    /** @type {?} */\n    ElUploadRequest.prototype.headers;\n    /** @type {?} */\n    ElUploadRequest.prototype.withCredentials;\n    /** @type {?} */\n    ElUploadRequest.prototype.fileName;\n    /** @type {?} */\n    ElUploadRequest.prototype.defaultBody;\n    /** @type {?} */\n    ElUploadRequest.prototype.http;\n}\n//# sourceMappingURL=upload.request.js.map \n",null]}