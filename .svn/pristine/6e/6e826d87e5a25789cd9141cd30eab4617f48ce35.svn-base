{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\date-picker\\utils\\format.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\date-picker\\utils\\format.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nvar DateFormat = /*@__PURE__*/ (function () {\n    function DateFormat() {\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    DateFormat.checkedDate = function (date) {\n        return typeof date === 'number' ? new Date(date) : date;\n    };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    DateFormat.getDayCountOfMonth = function (year, month) {\n        var /** @type {?} */ isLeapYear = year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n        return [\n            month === 1 && !isLeapYear,\n            month === 1 && isLeapYear,\n            !!([3, 5, 8, 10].find(function (num) { return num === month; })),\n            true,\n        ].reduce(function (pre, next, index) { return pre ? pre : (next ? 28 + index : 0); }, 0);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    DateFormat.getFirstDayOfMonth = function (date) {\n        var /** @type {?} */ checkedDate = DateFormat.checkedDate(date);\n        checkedDate.setDate(1);\n        return checkedDate.getDay();\n    };\n    /**\n     * @param {?} targetDate\n     * @return {?}\n     */\n    DateFormat.getCurrentMonthOffset = function (targetDate) {\n        var /** @type {?} */ checkedDate = DateFormat.checkedDate(targetDate);\n        var /** @type {?} */ currentDate = new Date();\n        if (currentDate.getFullYear() !== checkedDate.getFullYear()) {\n            return null;\n        }\n        var /** @type {?} */ offset = currentDate.getMonth() - checkedDate.getMonth();\n        return (offset > 1 || offset < -1) ? null : offset;\n    };\n    /**\n     * @param {?} input\n     * @param {?} format\n     * @return {?}\n     */\n    DateFormat.moment = function (input, format) {\n        var /** @type {?} */ d = new Date(input);\n        if (String(d) === 'Invalid Date')\n            return '';\n        var /** @type {?} */ makeReg = function (value) { return new RegExp(\"(\" + value + \")\"); };\n        var /** @type {?} */ keys = ['M+', 'd+', 'h+', 'm+', 's+', 'q+', 'S'];\n        var /** @type {?} */ values = [\n            d.getMonth() + 1,\n            d.getDate(),\n            d.getHours(),\n            d.getMinutes(),\n            d.getSeconds(),\n            Math.floor((d.getMonth() + 3) / 3),\n            d.getMilliseconds(),\n        ];\n        if (/(y+)/.test(format)) {\n            format = format.replace(RegExp.$1, (d.getFullYear() + '').substr(4 - RegExp.$1.length));\n        }\n        var /** @type {?} */ len = 0, /** @type {?} */ key, /** @type {?} */ val;\n        while (len < keys.length) {\n            key = keys[len];\n            val = values[len];\n            if (makeReg(key).test(format)) {\n                format = ((format)).replace(RegExp.$1, (RegExp.$1.length === 1) ? val : ('00' + val).substr(('' + val).length));\n            }\n            len++;\n        }\n        return format;\n    };\n    /**\n     * @param {?=} input\n     * @return {?}\n     */\n    DateFormat.prototype.getTime = function (input) {\n        var /** @type {?} */ date = new Date(input);\n        if (String(date) === 'Invalid Date') {\n            return 0;\n        }\n        return date.getTime();\n    };\n    return DateFormat;\n}());\nexport { DateFormat };\nfunction DateFormat_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DateFormat.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DateFormat.ctorParameters;\n}\n//# sourceMappingURL=format.js.map \n",null]}