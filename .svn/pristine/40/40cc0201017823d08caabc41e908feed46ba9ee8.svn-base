{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\progress\\progress.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\progress\\progress.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nvar Elprogress = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} sanitizer\n     */\n    function Elprogress(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.percentage = 0;\n        this.type = 'line';\n        this.strokeWidth = 6;\n        this.textInside = false;\n        this.showText = true;\n        // only in type=circle\n        this.width = 126;\n    }\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.progressTextSize = function () {\n        return this.type === 'line' ? 12 + this.strokeWidth * 0.4\n            : this.width * 0.111111 + 2;\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.makeIconClass = function () {\n        if (this.type === 'line') {\n            return this.status === 'success' ? 'el-icon-circle-check' : 'el-icon-circle-cross';\n        }\n        return this.status === 'success' ? 'el-icon-check' : 'el-icon-close';\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.makeStroke = function () {\n        if (this.status === 'success')\n            return '#13ce66';\n        if (this.status === 'exception')\n            return '#ff4949';\n        return '#20a0ff';\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.makeTrackPath = function () {\n        var /** @type {?} */ radius = ~~(50 - Number.parseFloat(this.relativeStrokeWidth) / 2);\n        return \"M 50 50 m 0 -\" + radius + \" a \" + radius + \" \" + radius + \" 0 1 1 0 \" + radius * 2 + \" a \" + radius + \" \" + radius + \" 0 1 1 0 -\" + radius * 2;\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.svgStyles = function () {\n        var /** @type {?} */ perimeter = (50 - parseFloat(this.relativeStrokeWidth) / 2) * 2 * Math.PI;\n        var /** @type {?} */ styles = \"stroke-dasharray: \" + perimeter + \"px, \" + perimeter + \"px;\";\n        styles += \"stroke-dashoffset: \" + (1 - this.percentage / 100) * perimeter + \"px;\";\n        styles += 'transition: stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease';\n        return this.sanitizer.bypassSecurityTrustStyle(styles);\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.colorStryles = function () {\n        var /** @type {?} */ styles = \"width: \" + this.percentage + \"%;\" +\n            (this.activeColor ? \"background-color: \" + this.activeColor + \";\" : '');\n        return this.sanitizer.bypassSecurityTrustStyle(styles);\n    };\n    /**\n     * @return {?}\n     */\n    Elprogress.prototype.ngOnInit = function () {\n        this.percentage > 100 && (this.percentage = 100);\n        this.relativeStrokeWidth = (this.strokeWidth / this.width * 100).toFixed(1);\n    };\n    return Elprogress;\n}());\nexport { Elprogress };\nfunction Elprogress_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Elprogress.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Elprogress.ctorParameters;\n    /** @type {?} */\n    Elprogress.propDecorators;\n    /** @type {?} */\n    Elprogress.prototype.percentage;\n    /** @type {?} */\n    Elprogress.prototype.type;\n    /** @type {?} */\n    Elprogress.prototype.status;\n    /** @type {?} */\n    Elprogress.prototype.strokeWidth;\n    /** @type {?} */\n    Elprogress.prototype.textInside;\n    /** @type {?} */\n    Elprogress.prototype.showText;\n    /** @type {?} */\n    Elprogress.prototype.width;\n    /** @type {?} */\n    Elprogress.prototype.activeColor;\n    /** @type {?} */\n    Elprogress.prototype.relativeStrokeWidth;\n    /** @type {?} */\n    Elprogress.prototype.sanitizer;\n}\n//# sourceMappingURL=progress.js.map \n",null]}