{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\rate\\rate.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\rate\\rate.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ViewChild, Renderer2, forwardRef } from '@angular/core';\nimport { ElRateProps } from './rate.props';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElRate = /*@__PURE__*/ (function (_super) {\n    __extends(ElRate, _super);\n    /**\n     * @param {?} sanitizer\n     * @param {?} renderer\n     */\n    function ElRate(sanitizer, renderer) {\n        var _this = _super.call(this) || this;\n        _this.sanitizer = sanitizer;\n        _this.renderer = renderer;\n        _this.scores = [];\n        _this.controlChange = function () { };\n        _this.controlTouch = function () { };\n        return _this;\n    }\n    /**\n     * @param {?} __0\n     * @param {?=} index\n     * @param {?=} reset\n     * @return {?}\n     */\n    ElRate.prototype.hoverToggle = function (_a, index, reset) {\n        var srcElement = _a.srcElement;\n        if (reset === void 0) {\n            reset = false;\n        }\n        if (this.elDisabled)\n            return;\n        var /** @type {?} */ iconElement = srcElement.tagName === 'I' ? srcElement : srcElement.children[0];\n        if (reset) {\n            this.model = this.backupModel;\n            this.renderer.removeClass(iconElement, 'hover');\n        }\n        else {\n            this.model = index;\n            this.renderer.addClass(iconElement, 'hover');\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElRate.prototype.selectValue = function (index) {\n        if (this.elDisabled)\n            return;\n        this.model = this.backupModel = index;\n        this.modelChange.emit(index);\n        this.controlChange;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElRate.prototype.makeIconClasses = function (index) {\n        var /** @type {?} */ voidClass = this.elDisabled ? this.rateMap.elDisabled.class : this.rateMap.void.class;\n        var /** @type {?} */ activeItem = this.findCurrentType(this.model, this.rateMap);\n        var /** @type {?} */ classes = index <= this.model ? activeItem.class : voidClass;\n        return 'el-rate__icon ' + classes;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElRate.prototype.makeIconStyles = function (index) {\n        var /** @type {?} */ voidColor = this.elDisabled ? this.rateMap.elDisabled.color : this.rateMap.void.color;\n        var /** @type {?} */ activeItem = this.findCurrentType(this.model, this.rateMap);\n        var /** @type {?} */ styles = \"color: \" + (index <= this.model ? activeItem.color : voidColor) + \";\";\n        return this.sanitizer.bypassSecurityTrustStyle(styles);\n    };\n    /**\n     * @param {?} index\n     * @param {?} rateMap\n     * @return {?}\n     */\n    ElRate.prototype.findCurrentType = function (index, rateMap) {\n        if (index <= this.lowThreshold)\n            return rateMap.low;\n        if (index >= this.highThreshold)\n            return rateMap.high;\n        return rateMap.medium;\n    };\n    /**\n     * @return {?}\n     */\n    ElRate.prototype.ngOnInit = function () {\n        this.scores = new Array(this.max).fill('');\n        this.backupModel = this.model;\n        this.rateMap = {\n            low: { color: this.colors[0], class: this.iconClasses[0] },\n            medium: { color: this.colors[1], class: this.iconClasses[1] },\n            high: { color: this.colors[2], class: this.iconClasses[2] },\n            void: { color: this.voidColor, class: this.voidIconClass },\n            elDisabled: { color: this.disabledVoidColor, class: this.disabledVoidIconClass },\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElRate.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElRate.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElRate.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElRate;\n}(ElRateProps));\nexport { ElRate };\nfunction ElRate_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElRate.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElRate.ctorParameters;\n    /** @type {?} */\n    ElRate.propDecorators;\n    /** @type {?} */\n    ElRate.prototype.rateIcon;\n    /** @type {?} */\n    ElRate.prototype.scores;\n    /** @type {?} */\n    ElRate.prototype.rateMap;\n    /** @type {?} */\n    ElRate.prototype.backupModel;\n    /** @type {?} */\n    ElRate.prototype.controlChange;\n    /** @type {?} */\n    ElRate.prototype.controlTouch;\n    /** @type {?} */\n    ElRate.prototype.sanitizer;\n    /** @type {?} */\n    ElRate.prototype.renderer;\n}\n//# sourceMappingURL=rate.js.map \n",null]}