{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\upload\\upload.props.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\upload\\upload.props.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { EventEmitter, Input, Output } from '@angular/core';\nvar ElUploadProps = /*@__PURE__*/ (function () {\n    function ElUploadProps() {\n        this.elDisabled = false;\n        this.data = {};\n        this.name = 'file';\n        this.drag = false;\n        this.multiple = false;\n        this.headers = {};\n        this.withCredentials = false;\n        this.showFileList = true;\n        this.listType = 'text';\n        // @Input('auto-upload') autoUpload: boolean = true\n        this.fileList = [];\n        // lifecycle event\n        this.preview = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.progress = new EventEmitter();\n        // about http event\n        this.success = new EventEmitter();\n        this.error = new EventEmitter();\n        this.uploadFilter = function (f) { return true; };\n    }\n    Object.defineProperty(ElUploadProps.prototype, \"disabled\", {\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElUploadProps.prototype, \"lifecycle\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var _this = this;\n            return {\n                preview: function (f) { return _this.preview.emit(f); },\n                remove: function (f) { return _this.remove.emit(f); },\n                success: function (f, res) { return _this.success.emit({ commonFile: f, response: res }); },\n                error: function (f, err) { return _this.error.emit({ commonFile: f, error: err }); },\n                progress: function (f, percentage) { return _this.progress.emit({ commonFile: f, percentage: percentage }); },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ElUploadProps;\n}());\nexport { ElUploadProps };\nfunction ElUploadProps_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElUploadProps.propDecorators;\n    /** @type {?} */\n    ElUploadProps.prototype.elDisabled;\n    /** @type {?} */\n    ElUploadProps.prototype.data;\n    /** @type {?} */\n    ElUploadProps.prototype.name;\n    /** @type {?} */\n    ElUploadProps.prototype.action;\n    /** @type {?} */\n    ElUploadProps.prototype.accept;\n    /** @type {?} */\n    ElUploadProps.prototype.drag;\n    /** @type {?} */\n    ElUploadProps.prototype.multiple;\n    /** @type {?} */\n    ElUploadProps.prototype.headers;\n    /** @type {?} */\n    ElUploadProps.prototype.withCredentials;\n    /** @type {?} */\n    ElUploadProps.prototype.showFileList;\n    /** @type {?} */\n    ElUploadProps.prototype.listType;\n    /** @type {?} */\n    ElUploadProps.prototype.fileList;\n    /** @type {?} */\n    ElUploadProps.prototype.preview;\n    /** @type {?} */\n    ElUploadProps.prototype.remove;\n    /** @type {?} */\n    ElUploadProps.prototype.progress;\n    /** @type {?} */\n    ElUploadProps.prototype.success;\n    /** @type {?} */\n    ElUploadProps.prototype.error;\n    /** @type {?} */\n    ElUploadProps.prototype.uploadFilter;\n}\n//# sourceMappingURL=upload.props.js.map \n",null]}