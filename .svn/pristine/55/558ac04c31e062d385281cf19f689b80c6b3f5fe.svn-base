{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\input-number\\input-number.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\input-number\\input-number.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, forwardRef } from '@angular/core';\nimport { ElInputNumberPoprs } from './input-number-props';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElInputNumber = /*@__PURE__*/ (function (_super) {\n    __extends(ElInputNumber, _super);\n    function ElInputNumber() {\n        var _this = _super.call(this) || this;\n        _this.minDisabled = false;\n        _this.maxDisabled = false;\n        _this.controlChange = function () { };\n        _this.controlTouch = function () { };\n        return _this;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElInputNumber.prototype.changeHandle = function (value) {\n        var /** @type {?} */ oldValue = this.model;\n        this.model = value;\n        if (Number.isNaN(+this.model)) {\n            this.model = oldValue;\n            return;\n        }\n        this.maxDisabled = value > this.max;\n        this.minDisabled = value < this.min;\n        if (this.maxDisabled)\n            return this.dispatchModel(this.max);\n        if (this.minDisabled)\n            return this.dispatchModel(this.min);\n        this.modelChange.emit(value);\n    };\n    /**\n     * @param {?} limit\n     * @return {?}\n     */\n    ElInputNumber.prototype.dispatchModel = function (limit) {\n        var _this = this;\n        var /** @type {?} */ timer = setTimeout(function () {\n            _this.model = limit;\n            _this.modelChange.emit(limit);\n            clearTimeout(timer);\n        }, this.debounce);\n    };\n    /**\n     * @param {?=} calcType\n     * @return {?}\n     */\n    ElInputNumber.prototype.decreaseHandle = function (calcType) {\n        if (calcType === void 0) {\n            calcType = true;\n        }\n        if (this.elDisabled)\n            return;\n        var /** @type {?} */ step = calcType ? this.step : 0 - this.step;\n        var /** @type {?} */ val = Number(this.model) + step;\n        if (Number.isNaN(val))\n            return;\n        this.maxDisabled = val > this.max;\n        this.minDisabled = val < this.min;\n        if (!this.maxDisabled && !this.minDisabled) {\n            this.model = val;\n            this.modelChange.emit(this.model);\n            this.controlChange(this.model);\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElInputNumber.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElInputNumber.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElInputNumber.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElInputNumber;\n}(ElInputNumberPoprs));\nexport { ElInputNumber };\nfunction ElInputNumber_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElInputNumber.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElInputNumber.ctorParameters;\n    /** @type {?} */\n    ElInputNumber.prototype.minDisabled;\n    /** @type {?} */\n    ElInputNumber.prototype.maxDisabled;\n    /** @type {?} */\n    ElInputNumber.prototype.controlChange;\n    /** @type {?} */\n    ElInputNumber.prototype.controlTouch;\n}\n//# sourceMappingURL=input-number.js.map \n",null]}