{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\select\\select.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\select\\select.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, ElementRef, Renderer2, forwardRef, } from '@angular/core';\nimport { ElSelectPoprs } from './select-props';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElSelect = /*@__PURE__*/ (function (_super) {\n    __extends(ElSelect, _super);\n    /**\n     * @param {?} el\n     * @param {?} renderer\n     */\n    function ElSelect(el, renderer) {\n        var _this = _super.call(this) || this;\n        _this.el = el;\n        _this.renderer = renderer;\n        _this.subscriber = [];\n        _this.dropdownActive = false;\n        _this.iconClass = 'arrow-up';\n        _this.controlChange = function () { };\n        _this.controlTouch = function () { };\n        return _this;\n    }\n    /**\n     * @param {?=} isEnter\n     * @return {?}\n     */\n    ElSelect.prototype.mouseHandle = function (isEnter) {\n        if (isEnter === void 0) {\n            isEnter = false;\n        }\n        if (!this.clearable || !this.model)\n            return;\n        this.iconClass = \"\" + (isEnter ? 'circle-close is-reverse' : 'arrow-up');\n    };\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    ElSelect.prototype.toggleHandle = function (event) {\n        if (this.elDisabled)\n            return;\n        event && event.stopPropagation();\n        this.dropdownActive = !this.dropdownActive;\n        var /** @type {?} */ nextClass = 'arrow-up' + (this.dropdownActive ? ' is-reverse' : '');\n        this.iconClass = !this.clearable ? nextClass : this.iconClass;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ElSelect.prototype.clearSelected = function (event) {\n        if (!this.clearable)\n            return;\n        event.stopPropagation();\n        // reset icon\n        this.mouseHandle(false);\n        // reset selected label\n        this.changeLabel(null, null);\n        // reset model\n        this.model = null;\n        this.modelChange.emit(this.model);\n        this.controlChange(this.model);\n        this.subscriber.forEach(function (sub) { return sub(); });\n        // close dropdown menu\n        this.dropdownActive = false;\n    };\n    /**\n     * @param {?} nextLabel\n     * @param {?=} nextValue\n     * @return {?}\n     */\n    ElSelect.prototype.changeLabel = function (nextLabel, nextValue) {\n        this.dropdownActive && this.toggleHandle();\n        // only update label\n        this.selectedLabel = nextLabel;\n        if (!nextValue || this.model === nextValue)\n            return;\n        this.model = nextValue;\n        this.modelChange.emit(nextValue);\n        this.controlChange(nextValue);\n        this.subscriber.forEach(function (sub) { return sub(); });\n    };\n    /**\n     * @return {?}\n     */\n    ElSelect.prototype.ngOnInit = function () {\n        var _this = this;\n        var /** @type {?} */ timer = setTimeout(function () {\n            _this.selfWidth = _this.el.nativeElement.getBoundingClientRect().width;\n            clearTimeout(timer);\n        }, 0);\n        this.globalListener = this.renderer.listen('document', 'click', function () {\n            _this.dropdownActive && _this.toggleHandle();\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ElSelect.prototype.ngOnChanges = function (changes) {\n        // not include model\n        if (!changes || !changes.model)\n            return;\n        if (changes.model.isFirstChange())\n            return;\n        // reset model\n        if (!changes.model.currentValue) {\n            this.selectedLabel = changes.model.currentValue;\n            this.model = changes.model.currentValue;\n            this.modelChange.emit(changes.model.currentValue);\n            this.controlChange(this.model);\n        }\n        this.subscriber.forEach(function (sub) { return sub(); });\n    };\n    /**\n     * @return {?}\n     */\n    ElSelect.prototype.ngOnDestroy = function () {\n        this.globalListener && this.globalListener();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElSelect.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElSelect.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElSelect.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElSelect;\n}(ElSelectPoprs));\nexport { ElSelect };\nfunction ElSelect_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElSelect.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElSelect.ctorParameters;\n    /** @type {?} */\n    ElSelect.prototype.selfWidth;\n    /** @type {?} */\n    ElSelect.prototype.subscriber;\n    /** @type {?} */\n    ElSelect.prototype.dropdownActive;\n    /** @type {?} */\n    ElSelect.prototype.selectedLabel;\n    /** @type {?} */\n    ElSelect.prototype.iconClass;\n    /** @type {?} */\n    ElSelect.prototype.globalListener;\n    /** @type {?} */\n    ElSelect.prototype.controlChange;\n    /** @type {?} */\n    ElSelect.prototype.controlTouch;\n    /** @type {?} */\n    ElSelect.prototype.el;\n    /** @type {?} */\n    ElSelect.prototype.renderer;\n}\n//# sourceMappingURL=select.js.map \n",null]}