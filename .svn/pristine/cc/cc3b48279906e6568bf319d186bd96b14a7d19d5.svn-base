{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\notification\\notification.service.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\notification\\notification.service.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, Optional } from '@angular/core';\nimport { ElNotificationContainer } from './notification';\nimport { ExDynamicService } from '../shared/services/index';\nvar ElNotificationService = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} root\n     * @param {?} dynamic\n     */\n    function ElNotificationService(root, dynamic) {\n        this.root = root;\n        this.dynamic = dynamic;\n        this.components = [];\n        this.createComponent();\n    }\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @return {?}\n     */\n    ElNotificationService.prototype.show = function (msg, title) {\n        var _this = this;\n        var /** @type {?} */ len = this.components.length;\n        if (len === 0 || this.components[len - 1].init) {\n            this.createComponent();\n        }\n        // mark the component\n        var /** @type {?} */ currentLen = this.components.length;\n        var /** @type {?} */ current = this.components[currentLen - 1];\n        current.init = true;\n        current.instance.setContent(msg, title);\n        // init current component\n        if (currentLen > 1) {\n            var /** @type {?} */ lastInstance = this.components[currentLen - 2].instance;\n            current.instance.offset = lastInstance.height + lastInstance.offset + 15;\n        }\n        current.instance.onDestroy = function () {\n            var /** @type {?} */ index = _this.components.findIndex(function (com) { return com.id === current.id; });\n            // reflow top style\n            _this.components.forEach(function (com, i) {\n                if (i <= index)\n                    return;\n                com.instance.offset = com.instance.offset - current.instance.height - 15;\n            });\n            // component detach and remove element\n            _this.dynamic.destroy(current.copy);\n            // remove empty item\n            _this.components.splice(index, 1);\n        };\n        var /** @type {?} */ timer = setTimeout(function () {\n            current.instance.show();\n            clearTimeout(timer);\n        }, 0);\n    };\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @return {?}\n     */\n    ElNotificationService.prototype.success = function (msg, title) {\n        this.setOptions({ type: 'success' });\n        this.show(msg, title);\n    };\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @return {?}\n     */\n    ElNotificationService.prototype.warning = function (msg, title) {\n        this.setOptions({ type: 'warning' });\n        this.show(msg, title);\n    };\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @return {?}\n     */\n    ElNotificationService.prototype.info = function (msg, title) {\n        this.setOptions({ type: 'info' });\n        this.show(msg, title);\n    };\n    /**\n     * @param {?} msg\n     * @param {?=} title\n     * @return {?}\n     */\n    ElNotificationService.prototype.error = function (msg, title) {\n        this.setOptions({ type: 'error' });\n        this.show(msg, title);\n    };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    ElNotificationService.prototype.setOptions = function (options) {\n        if (this.components.length === 0 || this.components[this.components.length - 1].init) {\n            this.createComponent();\n        }\n        var /** @type {?} */ last = this.components[this.components.length - 1];\n        last.instance = Object.assign(last.instance, options);\n    };\n    /**\n     * @return {?}\n     */\n    ElNotificationService.prototype.createComponent = function () {\n        var /** @type {?} */ com = this.dynamic.generator(ElNotificationContainer);\n        this.components.push({\n            instance: com.instance,\n            id: com.instance.id,\n            copy: com,\n            init: false\n        });\n    };\n    return ElNotificationService;\n}());\nexport { ElNotificationService };\nfunction ElNotificationService_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElNotificationService.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElNotificationService.ctorParameters;\n    /** @type {?} */\n    ElNotificationService.prototype.components;\n    /** @type {?} */\n    ElNotificationService.prototype.root;\n    /** @type {?} */\n    ElNotificationService.prototype.dynamic;\n}\n//# sourceMappingURL=notification.service.js.map \n",null]}