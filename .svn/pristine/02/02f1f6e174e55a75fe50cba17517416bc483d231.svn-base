{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\cascader\\cascader.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\cascader\\cascader.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, forwardRef, Renderer2 } from '@angular/core';\nimport { ElCascaderPoprs } from './cascader-props';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElCascader = /*@__PURE__*/ (function (_super) {\n    __extends(ElCascader, _super);\n    /**\n     * @param {?} renderer\n     */\n    function ElCascader(renderer) {\n        var _this = _super.call(this) || this;\n        _this.renderer = renderer;\n        _this.steps = [];\n        _this.menuVisible = false;\n        _this.inputHover = false;\n        _this.currentLabels = [];\n        _this.controlChange = function () { };\n        _this.controlTouch = function () { };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ElCascader.prototype.close = function () {\n        this.menuVisible = false;\n        this.globalListenFunc && this.globalListenFunc();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ElCascader.prototype.clickHandle = function (event) {\n        var _this = this;\n        event.stopPropagation();\n        if (this.elDisabled)\n            return;\n        var /** @type {?} */ element = (event.target);\n        var /** @type {?} */ isSelfTrigger = ['SPAN', 'I', 'INPUT'].find(function (v) { return v === element.tagName; });\n        if (!isSelfTrigger)\n            return;\n        this.menuVisible = !this.menuVisible;\n        if (this.menuVisible) {\n            this.globalListenFunc = this.renderer.listen('document', 'click', function () {\n                _this.menuVisible = false;\n            });\n        }\n        else {\n            this.globalListenFunc && this.globalListenFunc();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ElCascader.prototype.changeLabels = function () {\n        var /** @type {?} */ nextValue = [];\n        this.steps.forEach(function (items) {\n            var /** @type {?} */ steps = items.filter(function (item) { return item.active; });\n            nextValue.push(steps[0]);\n        });\n        this.currentLabels = nextValue;\n        var /** @type {?} */ next = nextValue.map(function (item) { return item.value; });\n        this.model = next;\n        this.modelChange.emit(next);\n        this.controlChange(next);\n    };\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    ElCascader.prototype.clearValue = function (event) {\n        event && event.stopPropagation();\n        this.currentLabels = [];\n        var /** @type {?} */ step1 = this.options.map(function (option) {\n            return Object.assign(option, {\n                active: false,\n            });\n        });\n        this.steps = [step1];\n        this.menuVisible = false;\n    };\n    /**\n     * @param {?} event\n     * @param {?} step\n     * @param {?} index\n     * @return {?}\n     */\n    ElCascader.prototype.selectHandle = function (event, step, index) {\n        event.stopPropagation();\n        if (this.steps[step][index].elDisabled)\n            return;\n        this.steps[step] = this.steps[step].map(function (item, i) {\n            return Object.assign(item, { active: i === index });\n        });\n        // reset steps\n        this.steps.length = step + 1;\n        var /** @type {?} */ next = this.steps[step][index].children;\n        // go next\n        if (next && Array.isArray(next)) {\n            // change on select (props)\n            this.changeOnSelect && this.changeLabels();\n            var /** @type {?} */ nativeNext = next.map(function (item) { return Object.assign(item, { active: false }); });\n            return this.steps.push(nativeNext);\n        }\n        // last step\n        this.changeLabels();\n        this.menuVisible = false;\n    };\n    /**\n     * @return {?}\n     */\n    ElCascader.prototype.showClearIcon = function () {\n        return !!(this.clearable && this.inputHover && this.currentLabels.length);\n    };\n    /**\n     * @return {?}\n     */\n    ElCascader.prototype.ngOnInit = function () {\n        this.clearValue();\n        if (this.model && this.model.length) {\n            var /** @type {?} */ getLabel_1 = function (options, val) {\n                var /** @type {?} */ item = options.filter(function (item) { return item.value === val; })[0];\n                return { children: item.children, val: item };\n            };\n            var /** @type {?} */ options_1 = this.options;\n            var /** @type {?} */ val = this.model.map(function (v) {\n                var _a = getLabel_1(options_1, v), children = _a.children, val = _a.val;\n                options_1 = children;\n                return val;\n            });\n            this.currentLabels = val.filter(function (v) { return !!v; });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ElCascader.prototype.ngOnDestroy = function () {\n        this.globalListenFunc && this.globalListenFunc();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElCascader.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElCascader.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElCascader.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElCascader;\n}(ElCascaderPoprs));\nexport { ElCascader };\nfunction ElCascader_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElCascader.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElCascader.ctorParameters;\n    /** @type {?} */\n    ElCascader.prototype.steps;\n    /** @type {?} */\n    ElCascader.prototype.menuVisible;\n    /** @type {?} */\n    ElCascader.prototype.inputHover;\n    /** @type {?} */\n    ElCascader.prototype.currentLabels;\n    /** @type {?} */\n    ElCascader.prototype.globalListenFunc;\n    /** @type {?} */\n    ElCascader.prototype.controlChange;\n    /** @type {?} */\n    ElCascader.prototype.controlTouch;\n    /** @type {?} */\n    ElCascader.prototype.renderer;\n}\n//# sourceMappingURL=cascader.js.map \n",null]}