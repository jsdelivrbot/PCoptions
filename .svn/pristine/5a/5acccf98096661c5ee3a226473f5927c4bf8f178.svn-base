{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\table\\children\\body.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\table\\children\\body.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, EventEmitter, Output, } from '@angular/core';\nimport { ElTableFormat } from '../utils/format';\nimport { DomSanitizer } from '@angular/platform-browser';\nvar ElTableBody = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} tableFormat\n     * @param {?} sanitizer\n     */\n    function ElTableBody(tableFormat, sanitizer) {\n        this.tableFormat = tableFormat;\n        this.sanitizer = sanitizer;\n        this.stripe = false;\n        this.center = false;\n        this.cellClick = new EventEmitter();\n        this.cellDblClick = new EventEmitter();\n        this.cellMouseEnter = new EventEmitter();\n        this.cellMouseLeave = new EventEmitter();\n        this.formatModel = [];\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    ElTableBody.prototype.renderHtml = function (str) {\n        return this.sanitizer.bypassSecurityTrustHtml(str);\n    };\n    /**\n     * @param {?} domHandle\n     * @param {?} next\n     * @return {?}\n     */\n    ElTableBody.prototype.merge = function (domHandle, next) {\n        return Object.assign(domHandle, next);\n    };\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    ElTableBody.prototype.isTemplateRef = function (content) {\n        return content && typeof content === 'object';\n    };\n    /**\n     * @return {?}\n     */\n    ElTableBody.prototype.getBodyWidth = function () {\n        var /** @type {?} */ width = ElTableFormat.getCSSValue(this.layout.bodyWidth);\n        if (!width)\n            return this.layout.bodyWidth;\n        return width - this.layout.scrollBarWidth;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElTableBody.prototype.getFormatModel = function (index) {\n        return this.formatModel[index];\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElTableBody.prototype.destroyRowFunc = function (index) {\n        var _this = this;\n        return function () {\n            _this.model.splice(index, 1);\n            _this.formatModel = _this.tableFormat.formatRowData(_this.model);\n        };\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElTableBody.prototype.makeRowClass = function (index) {\n        var /** @type {?} */ userRows = this.formatModel[index];\n        var /** @type {?} */ userClass = this.rowClassName ? this.rowClassName(userRows, index) : '';\n        return 'el-table__row ' + userClass;\n    };\n    /**\n     * @param {?} event\n     * @param {?} Ref\n     * @return {?}\n     */\n    ElTableBody.prototype.doubleClickHandle = function (event, Ref) {\n        Ref.event = event;\n        this.cellDblClick.emit(Ref);\n    };\n    /**\n     * @param {?} event\n     * @param {?} Ref\n     * @return {?}\n     */\n    ElTableBody.prototype.clickHandle = function (event, Ref) {\n        Ref.event = event;\n        this.cellClick.emit(Ref);\n    };\n    /**\n     * @param {?} event\n     * @param {?} isEnter\n     * @return {?}\n     */\n    ElTableBody.prototype.cellMouseActionHandle = function (event, isEnter) {\n        if (isEnter)\n            return this.cellMouseEnter.emit(event);\n        this.cellMouseLeave.emit(event);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ElTableBody.prototype.ngOnChanges = function (changes) {\n        // not include model\n        if (!changes || !changes.model)\n            return;\n        this.formatModel = this.tableFormat.formatRowData(this.model);\n    };\n    return ElTableBody;\n}());\nexport { ElTableBody };\nfunction ElTableBody_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElTableBody.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElTableBody.ctorParameters;\n    /** @type {?} */\n    ElTableBody.propDecorators;\n    /** @type {?} */\n    ElTableBody.prototype.model;\n    /** @type {?} */\n    ElTableBody.prototype.stripe;\n    /** @type {?} */\n    ElTableBody.prototype.center;\n    /** @type {?} */\n    ElTableBody.prototype.layout;\n    /** @type {?} */\n    ElTableBody.prototype.rowClassName;\n    /** @type {?} */\n    ElTableBody.prototype.cellClick;\n    /** @type {?} */\n    ElTableBody.prototype.cellDblClick;\n    /** @type {?} */\n    ElTableBody.prototype.cellMouseEnter;\n    /** @type {?} */\n    ElTableBody.prototype.cellMouseLeave;\n    /** @type {?} */\n    ElTableBody.prototype.formatModel;\n    /** @type {?} */\n    ElTableBody.prototype.tableFormat;\n    /** @type {?} */\n    ElTableBody.prototype.sanitizer;\n}\n//# sourceMappingURL=body.js.map \n",null]}