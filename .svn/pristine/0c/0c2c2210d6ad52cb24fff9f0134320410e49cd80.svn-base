{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\date-picker\\picker.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\date-picker\\picker.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, forwardRef, Renderer2 } from '@angular/core';\nimport { ElDatePickerProps } from './picker-props';\nimport { DateFormat } from './utils/format';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElDataPicker = /*@__PURE__*/ (function (_super) {\n    __extends(ElDataPicker, _super);\n    /**\n     * @param {?} dateFormat\n     * @param {?} renderer\n     */\n    function ElDataPicker(dateFormat, renderer) {\n        var _this = _super.call(this) || this;\n        _this.dateFormat = dateFormat;\n        _this.renderer = renderer;\n        _this.showPanelPicker = false;\n        _this.iconShowClose = false;\n        _this.controlChange = function () { };\n        _this.controlTouch = function () { };\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @return {?}\n     */\n    ElDataPicker.prototype.iconMouseActionHandle = function (t) {\n        if (!this.clearable)\n            return;\n        this.iconShowClose = this.model && t;\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ElDataPicker.prototype.iconClickHandle = function (e) {\n        this.iconClick.emit(e);\n        if (this.elDisabled)\n            return;\n        // use close action\n        if (this.iconShowClose) {\n            this.clearClick.emit(e);\n            this.model = null;\n            this.value = Date.now();\n            this.showPanelPicker = false;\n            this.iconShowClose = false;\n            return;\n        }\n        // toggle action\n        this.showPanelPicker = !this.showPanelPicker;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ElDataPicker.prototype.propagationHandle = function (event) {\n        event.stopPropagation();\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    ElDataPicker.prototype.changeHandle = function (input) {\n        var /** @type {?} */ time = this.dateFormat.getTime(input);\n        // if (!time) return\n        this.value = time;\n    };\n    /**\n     * @return {?}\n     */\n    ElDataPicker.prototype.tryUpdateText = function () {\n        if (!this.value) {\n            this.model = null;\n            this.modelChange.emit(null);\n            this.controlChange(null);\n            this.showPanelPicker = false;\n            return;\n        }\n        var /** @type {?} */ modelTime = new Date(this.model).getTime();\n        var /** @type {?} */ time = this.dateFormat.getTime(this.value);\n        this.dateChangeHandle(time ? this.value : modelTime);\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    ElDataPicker.prototype.dateChangeHandle = function (time) {\n        this.model = DateFormat.moment(time, this.format);\n        this.value = new Date(this.model).getTime();\n        this.modelChange.emit(this.model);\n        this.controlChange(this.model);\n        this.showPanelPicker = false;\n    };\n    /**\n     * @return {?}\n     */\n    ElDataPicker.prototype.focusHandle = function () {\n        var _this = this;\n        this.showPanelPicker = true;\n        this.globalKeydownListener && this.globalKeydownListener();\n        this.globalKeydownListener = this.renderer.listen('document', 'keydown', function (event) {\n            if (event.keyCode === 9 || event.keyCode === 27) {\n                _this.showPanelPicker = false;\n                _this.globalKeydownListener && _this.globalKeydownListener();\n            }\n            if (event.keyCode === 13) {\n                _this.tryUpdateText();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ElDataPicker.prototype.ngOnInit = function () {\n        var _this = this;\n        this.globalClickListener = this.renderer.listen('document', 'click', function () {\n            if (!_this.showPanelPicker)\n                return;\n            _this.showPanelPicker = false;\n            _this.changeOnBlur && _this.tryUpdateText();\n        });\n        // init value\n        var /** @type {?} */ time = this.dateFormat.getTime(this.model);\n        if (!time)\n            return;\n        this.model = DateFormat.moment(time, this.format);\n        this.value = time;\n    };\n    /**\n     * @return {?}\n     */\n    ElDataPicker.prototype.ngOnDestroy = function () {\n        this.globalClickListener && this.globalClickListener();\n        this.globalKeydownListener && this.globalKeydownListener();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElDataPicker.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElDataPicker.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElDataPicker.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElDataPicker;\n}(ElDatePickerProps));\nexport { ElDataPicker };\nfunction ElDataPicker_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElDataPicker.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElDataPicker.ctorParameters;\n    /** @type {?} */\n    ElDataPicker.prototype.showPanelPicker;\n    /** @type {?} */\n    ElDataPicker.prototype.value;\n    /** @type {?} */\n    ElDataPicker.prototype.globalClickListener;\n    /** @type {?} */\n    ElDataPicker.prototype.globalKeydownListener;\n    /** @type {?} */\n    ElDataPicker.prototype.iconShowClose;\n    /** @type {?} */\n    ElDataPicker.prototype.controlChange;\n    /** @type {?} */\n    ElDataPicker.prototype.controlTouch;\n    /** @type {?} */\n    ElDataPicker.prototype.dateFormat;\n    /** @type {?} */\n    ElDataPicker.prototype.renderer;\n}\n//# sourceMappingURL=picker.js.map \n",null]}