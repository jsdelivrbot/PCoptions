{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\date-picker\\children\\year-table.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\date-picker\\children\\year-table.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nvar ElYearTable = /*@__PURE__*/ (function () {\n    function ElYearTable() {\n        this.showWeekNumber = false;\n        this.modelChange = new EventEmitter();\n    }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    ElYearTable.prototype.clickHandle = function (year) {\n        this.currentYear = year;\n        this.date.setFullYear(year);\n        this.modelChange.emit(this.date.getTime());\n    };\n    /**\n     * @param {?} currentYear\n     * @return {?}\n     */\n    ElYearTable.prototype.updateYearRow = function (currentYear) {\n        var /** @type {?} */ startYear = ~~(currentYear / 10) * 10;\n        return [[], [], []].map(function (v, index) {\n            return [0, 1, 2, 3].map(function (num) { return startYear + (index * 4) + num; });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ElYearTable.prototype.ngOnInit = function () {\n        this.date = new Date(this.model);\n        this.currentYear = this.date.getFullYear();\n        this.yearRows = this.updateYearRow(this.currentYear);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ElYearTable.prototype.ngOnChanges = function (changes) {\n        // not include model\n        if (!changes || !changes.model)\n            return;\n        // first change\n        if (changes.model.isFirstChange())\n            return;\n        this.model = changes.model.currentValue;\n        this.date = new Date(this.model);\n        this.currentYear = this.date.getFullYear();\n        this.yearRows = this.updateYearRow(this.currentYear);\n    };\n    return ElYearTable;\n}());\nexport { ElYearTable };\nfunction ElYearTable_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElYearTable.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElYearTable.ctorParameters;\n    /** @type {?} */\n    ElYearTable.propDecorators;\n    /** @type {?} */\n    ElYearTable.prototype.showWeekNumber;\n    /** @type {?} */\n    ElYearTable.prototype.model;\n    /** @type {?} */\n    ElYearTable.prototype.disabledDate;\n    /** @type {?} */\n    ElYearTable.prototype.modelChange;\n    /** @type {?} */\n    ElYearTable.prototype.date;\n    /** @type {?} */\n    ElYearTable.prototype.yearRows;\n    /** @type {?} */\n    ElYearTable.prototype.currentYear;\n}\n//# sourceMappingURL=year-table.js.map \n",null]}