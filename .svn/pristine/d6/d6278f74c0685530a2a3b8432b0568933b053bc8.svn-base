{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\switch\\switch.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\switch\\switch.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElSwitch = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} sanitizer\n     */\n    function ElSwitch(sanitizer) {\n        this.sanitizer = sanitizer;\n        this.elDisabled = false;\n        this.activeColor = '#409EFF';\n        this.inactiveColor = '#C0CCDA';\n        this.modelChange = new EventEmitter();\n        this._model = false;\n        this.hasText = false;\n        this.controlChange = function () { };\n        this.controlTouch = function () { };\n    }\n    Object.defineProperty(ElSwitch.prototype, \"disabled\", {\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElSwitch.prototype, \"model\", {\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this._model = val;\n            this.updateStyles();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} nextValue\n     * @return {?}\n     */\n    ElSwitch.prototype.changeHandle = function (nextValue) {\n        this.model = nextValue;\n        this.modelChange.emit(nextValue);\n        this.controlChange(nextValue);\n    };\n    /**\n     * @return {?}\n     */\n    ElSwitch.prototype.updateStyles = function () {\n        var /** @type {?} */ baseStyle = \"width: \" + this.realWidth + \"px;\";\n        var /** @type {?} */ translate = this._model ? \"translate3d(\" + (this.realWidth - 20) + \"px, 0, 0)\" : '';\n        var /** @type {?} */ color = this._model ? this.activeColor : this.inactiveColor;\n        var /** @type {?} */ colorStyles = \"border-color: \" + color + \"; background-color: \" + color + \";\";\n        this.iconTransform = this.sanitizer.bypassSecurityTrustStyle(\"transform: \" + translate);\n        if (this.activeColor && this.inactiveColor) {\n            baseStyle += colorStyles;\n        }\n        this.coreStyles = this.sanitizer.bypassSecurityTrustStyle(baseStyle);\n    };\n    /**\n     * @return {?}\n     */\n    ElSwitch.prototype.ngOnInit = function () {\n        this.realWidth = this.width ? this.width : 40;\n        this.updateStyles();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElSwitch.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElSwitch.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElSwitch.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElSwitch;\n}());\nexport { ElSwitch };\nfunction ElSwitch_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElSwitch.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElSwitch.ctorParameters;\n    /** @type {?} */\n    ElSwitch.propDecorators;\n    /** @type {?} */\n    ElSwitch.prototype.elDisabled;\n    /** @type {?} */\n    ElSwitch.prototype.name;\n    /** @type {?} */\n    ElSwitch.prototype.width;\n    /** @type {?} */\n    ElSwitch.prototype.activeIconClass;\n    /** @type {?} */\n    ElSwitch.prototype.inactiveIconClass;\n    /** @type {?} */\n    ElSwitch.prototype.activeText;\n    /** @type {?} */\n    ElSwitch.prototype.inactiveText;\n    /** @type {?} */\n    ElSwitch.prototype.activeColor;\n    /** @type {?} */\n    ElSwitch.prototype.inactiveColor;\n    /** @type {?} */\n    ElSwitch.prototype.modelChange;\n    /** @type {?} */\n    ElSwitch.prototype._model;\n    /** @type {?} */\n    ElSwitch.prototype.hasText;\n    /** @type {?} */\n    ElSwitch.prototype.realWidth;\n    /** @type {?} */\n    ElSwitch.prototype.coreStyles;\n    /** @type {?} */\n    ElSwitch.prototype.iconTransform;\n    /** @type {?} */\n    ElSwitch.prototype.controlChange;\n    /** @type {?} */\n    ElSwitch.prototype.controlTouch;\n    /** @type {?} */\n    ElSwitch.prototype.sanitizer;\n}\n//# sourceMappingURL=switch.js.map \n",null]}