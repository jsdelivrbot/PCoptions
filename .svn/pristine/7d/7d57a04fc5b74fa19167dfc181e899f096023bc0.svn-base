{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\checkbox\\checkbox-group.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\checkbox\\checkbox-group.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar ElCheckboxGroup = /*@__PURE__*/ (function () {\n    function ElCheckboxGroup() {\n        this.model = [];\n        this.fill = '#20a0ff';\n        this.textColor = '#ffffff';\n        this.min = 0;\n        this.max = 1000;\n        this.modelChange = new EventEmitter();\n        // children update handle\n        this.subscriber = [];\n        this.controlChange = function () { };\n        this.controlTouch = function () { };\n    }\n    /**\n     * @param {?} nextValue\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.changeModel = function (nextValue) {\n        var _this = this;\n        setTimeout(function () {\n            _this.model = nextValue;\n            _this.modelChange.emit(nextValue);\n            _this.controlChange(nextValue);\n            _this.subscriber.forEach(function (sub) { return sub(); });\n        }, 0);\n    };\n    /**\n     * @param {?} t\n     * @param {?} label\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.updateModelFromChildren = function (t, label) {\n        // add label value\n        if (t && this.model.indexOf(label) === -1) {\n            if (this.model.length >= this.max)\n                return;\n            this.model.push(label);\n        }\n        // remove label value\n        if (!t && this.model.indexOf(label) > -1) {\n            if (this.model.length < this.min)\n                return;\n            this.model = this.model.map(function (v) { return v === label ? null : v; })\n                .filter(function (v) { return v; });\n        }\n        // synchronize host\n        this.changeModel(this.model);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.ngOnChanges = function (changes) {\n        if (!changes || !changes.model)\n            return;\n        if (changes.model.isFirstChange())\n            return;\n        this.changeModel(changes.model.currentValue);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.writeValue = function (value) {\n        this.model = value;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.registerOnChange = function (fn) {\n        this.controlChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    ElCheckboxGroup.prototype.registerOnTouched = function (fn) {\n        this.controlTouch = fn;\n    };\n    return ElCheckboxGroup;\n}());\nexport { ElCheckboxGroup };\nfunction ElCheckboxGroup_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElCheckboxGroup.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElCheckboxGroup.ctorParameters;\n    /** @type {?} */\n    ElCheckboxGroup.propDecorators;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.model;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.size;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.fill;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.textColor;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.min;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.max;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.modelChange;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.subscriber;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.controlChange;\n    /** @type {?} */\n    ElCheckboxGroup.prototype.controlTouch;\n}\n//# sourceMappingURL=checkbox-group.js.map \n",null]}