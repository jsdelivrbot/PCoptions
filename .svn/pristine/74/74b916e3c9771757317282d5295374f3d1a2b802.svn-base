{"remainingRequest":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\button\\button.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\element-angular\\release\\button\\button.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\PCWebSite\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, } from '@angular/core';\nimport { removeNgTag } from '../shared/utils/index';\nimport { DomSanitizer } from '@angular/platform-browser';\nvar ElButton = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} el\n     * @param {?} sanitizer\n     */\n    function ElButton(el, sanitizer) {\n        this.el = el;\n        this.sanitizer = sanitizer;\n        this.elDisabled = false;\n        this.themeType = '';\n        this.nativeType = 'button';\n        this.size = '';\n        this.icon = '';\n        this.loading = false;\n        this.plain = false;\n        this.round = false;\n        this.autofocus = false;\n        this.style = '';\n        this.nativeClass = '';\n        this.click = new EventEmitter();\n    }\n    Object.defineProperty(ElButton.prototype, \"disabled\", {\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    ElButton.prototype.clickHandle = function ($event) {\n        this.click.emit($event);\n    };\n    /**\n     * @return {?}\n     */\n    ElButton.prototype.extendStyles = function () {\n        return this.sanitizer.bypassSecurityTrustStyle(this.style);\n    };\n    /**\n     * @return {?}\n     */\n    ElButton.prototype.ngOnInit = function () {\n        removeNgTag(this.el.nativeElement);\n    };\n    return ElButton;\n}());\nexport { ElButton };\nfunction ElButton_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElButton.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElButton.ctorParameters;\n    /** @type {?} */\n    ElButton.propDecorators;\n    /** @type {?} */\n    ElButton.prototype.elDisabled;\n    /** @type {?} */\n    ElButton.prototype.themeType;\n    /** @type {?} */\n    ElButton.prototype.nativeType;\n    /** @type {?} */\n    ElButton.prototype.size;\n    /** @type {?} */\n    ElButton.prototype.icon;\n    /** @type {?} */\n    ElButton.prototype.loading;\n    /** @type {?} */\n    ElButton.prototype.plain;\n    /** @type {?} */\n    ElButton.prototype.round;\n    /** @type {?} */\n    ElButton.prototype.autofocus;\n    /** @type {?} */\n    ElButton.prototype.style;\n    /** @type {?} */\n    ElButton.prototype.nativeClass;\n    /** @type {?} */\n    ElButton.prototype.click;\n    /** @type {?} */\n    ElButton.prototype.el;\n    /** @type {?} */\n    ElButton.prototype.sanitizer;\n}\n//# sourceMappingURL=button.js.map \n",null]}