{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\shared\\utils\\bounding.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\shared\\utils\\bounding.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var /** @type {?} */ getRealShape = function (el) {\n    var /** @type {?} */ rect = el.getBoundingClientRect();\n    var _a = window.getComputedStyle(el), width = _a.width, height = _a.height;\n    var /** @type {?} */ getCSSStyleVal = function (val, parentNum) {\n        if (!val)\n            return 0;\n        var /** @type {?} */ str = String(val);\n        var /** @type {?} */ strVal = str.includes('px') ? str.split('px')[0] :\n            str.includes('%') ? Number(str.split('%')[0]) * parentNum * 0.01 : str;\n        return Number.isNaN(Number(strVal)) ? 0 : Number(strVal);\n    };\n    return {\n        width: getCSSStyleVal(width, rect.width),\n        height: getCSSStyleVal(height, rect.height),\n    };\n};\nvar /** @type {?} */ getPositionForDir = function (hostRect, selfRect, dir, arrowDir) {\n    var /** @type {?} */ diffWidth = hostRect.width - selfRect.width;\n    var /** @type {?} */ diffHeight = selfRect.height - hostRect.height;\n    var /** @type {?} */ topMap = {\n        top: -10 - selfRect.height,\n        bottom: hostRect.height,\n        left: arrowDir === 'start' ? 0 : arrowDir === 'end' ? 0 - diffHeight : 0 - Math.abs(diffHeight / 2),\n        right: arrowDir === 'start' ? 0 : arrowDir === 'end' ? 0 - diffHeight : 0 - Math.abs(diffHeight / 2),\n    };\n    var /** @type {?} */ leftMap = {\n        left: -10 - selfRect.width,\n        right: hostRect.width,\n        top: arrowDir === 'start' ? 0 : arrowDir === 'end' ? diffWidth : diffWidth / 2,\n        bottom: arrowDir === 'start' ? 0 : arrowDir === 'end' ? diffWidth : diffWidth / 2,\n    };\n    var /** @type {?} */ isHorizontal = dir === 'left' || dir === 'right';\n    var /** @type {?} */ arrowLen = isHorizontal\n        ? arrowDir === 'center' ? selfRect.height : Math.min(hostRect.height, selfRect.height)\n        : arrowDir === 'center' ? selfRect.width : Math.min(hostRect.height, selfRect.height);\n    var /** @type {?} */ position = {\n        arrowFace: dir,\n        arrowDir: isHorizontal ? (arrowDir === 'end' ? 'bottom' : 'top') : (arrowDir === 'start' ? 'left' : 'right'),\n        arrowPosition: arrowLen / 2 - 5,\n        top: topMap[dir],\n        left: leftMap[dir],\n    };\n    return position;\n};\nexport { getPositionForDir, getRealShape, };\n//# sourceMappingURL=bounding.js.map",null]}