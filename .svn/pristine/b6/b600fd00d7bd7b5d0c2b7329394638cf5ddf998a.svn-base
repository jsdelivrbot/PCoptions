{"remainingRequest":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\menu\\menu.js","dependencies":[{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\element-angular\\release\\menu\\menu.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\74274\\Desktop\\optionsWeb\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nvar ElMenu = /*@__PURE__*/ (function () {\n    function ElMenu() {\n        this.mode = 'vertical';\n        this.theme = 'light';\n        this.uniqueOpened = false;\n        this.menuTrigger = 'hover';\n        this.modelChange = new EventEmitter();\n        this.openedMenus = this.defaultOpeneds ? this.defaultOpeneds.slice(0) : [];\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElMenu.prototype.openMenu = function (index) {\n        var /** @type {?} */ openedMenus = this.openedMenus;\n        if (openedMenus.indexOf(index) !== -1)\n            return;\n        this.openedMenus.push(index);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ElMenu.prototype.closeMenu = function (index) {\n        this.openedMenus.splice(this.openedMenus.indexOf(index), 1);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} path\n     * @return {?}\n     */\n    ElMenu.prototype.selectHandle = function (index, path) {\n        var /** @type {?} */ main = path || index;\n        this.model = main;\n        this.modelChange.emit(main);\n    };\n    /**\n     * @return {?}\n     */\n    ElMenu.prototype.hoverBackgroundColor = function () {\n        return this.backgroundColor ? this.hexToRGB() : '';\n    };\n    /**\n     * @return {?}\n     */\n    ElMenu.prototype.hexToRGB = function () {\n        var /** @type {?} */ hex = +this.backgroundColor.replace('#', '0x');\n        var /** @type {?} */ rgb = [(hex & 0xff0000) >> 16, (hex & 0x00ff00) >> 8, hex & 0x0000ff];\n        return \"rgb(\" + rgb.map(function (v) { return ~~(0.8 * v); }).join(',') + \")\";\n    };\n    return ElMenu;\n}());\nexport { ElMenu };\nfunction ElMenu_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElMenu.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ElMenu.ctorParameters;\n    /** @type {?} */\n    ElMenu.propDecorators;\n    /** @type {?} */\n    ElMenu.prototype.mode;\n    /** @type {?} */\n    ElMenu.prototype.theme;\n    /** @type {?} */\n    ElMenu.prototype.model;\n    /** @type {?} */\n    ElMenu.prototype.nativeClass;\n    /** @type {?} */\n    ElMenu.prototype.defaultOpeneds;\n    /** @type {?} */\n    ElMenu.prototype.uniqueOpened;\n    /** @type {?} */\n    ElMenu.prototype.menuTrigger;\n    /** @type {?} */\n    ElMenu.prototype.backgroundColor;\n    /** @type {?} */\n    ElMenu.prototype.textColor;\n    /** @type {?} */\n    ElMenu.prototype.activeTextColor;\n    /** @type {?} */\n    ElMenu.prototype.modelChange;\n    /** @type {?} */\n    ElMenu.prototype.openedMenus;\n    /** @type {?} */\n    ElMenu.prototype.showBorderIndex;\n}\n//# sourceMappingURL=menu.js.map \n",null]}